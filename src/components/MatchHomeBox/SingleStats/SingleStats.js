"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const SingleStats_module_css_1 = __importDefault(require("./SingleStats.module.css"));
const TittleTemplateBox_1 = __importDefault(require("../TittleTemplateBox/TittleTemplateBox"));
const OverallButton_1 = __importDefault(require("../OverallButton/OverallButton"));
const StatsLine_1 = __importDefault(require("../StatsLine/StatsLine"));
const SingleStats = (props) => {
    const [state, setState] = (0, react_1.useState)({
        all: false,
        single: true,
    });
    const setAll = () => {
        setState((prevState) => {
            return Object.assign(Object.assign({}, prevState), { all: true, single: false });
        });
    };
    const setSingle = () => {
        setState((prevState) => {
            return Object.assign(Object.assign({}, prevState), { all: false, single: true });
        });
    };
    const homeOBJHome = props.homeOBJHome;
    const homeOBJAll = props.homeOBJAll;
    const homeOBJHome_list = props.homeOBJHome_list;
    const homeOBJAll_list = props.homeOBJAll_list;
    let contentOverall;
    let contentWinOver;
    let contentBTTS;
    let contentHT;
    let contentOU;
    let contentOUHTFT;
    let contentHTFT;
    let gamesCountVar;
    if (state.single) {
        gamesCountVar = homeOBJHome.gamesCount;
        contentOverall = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: (homeOBJHome.gspm / homeOBJHome.gamesCount).toFixed(2), txt: "Goals scored per game", gameList: [], setList: false, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: (homeOBJHome.gcpm / homeOBJHome.gamesCount).toFixed(2), txt: "Goals conceded per game", gameList: [], setList: false, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.win / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win", gameList: homeOBJHome_list.win, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw", gameList: homeOBJHome_list.draw, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.lose / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose", gameList: homeOBJHome_list.lose, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.cleanS / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Clean sheets", gameList: homeOBJHome_list.cleanS, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.soem / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team scored over 0.5 goals", gameList: homeOBJHome_list.soem, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.stgoem / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team scored over 1.5 goals", gameList: homeOBJHome_list.stgoem, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentWinOver = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.win2 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win and over 1.5 goals", gameList: homeOBJHome_list.win2, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw2 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw and over 1.5 goals", gameList: homeOBJHome_list.draw2, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.lose2 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose and over 1.5 goals", gameList: homeOBJHome_list.lose2, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.win3 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win and over 2.5 goals", gameList: homeOBJHome_list.win3, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw3 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw and over 2.5 goals", gameList: homeOBJHome_list.draw3, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.lose3 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose and over 2.5 goals", gameList: homeOBJHome_list.lose3, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentBTTS = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.bts / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Both teams to score (BTTS)", gameList: homeOBJHome_list.bts, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.btsFH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "BTTS in the first half", gameList: homeOBJHome_list.btsFH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.BTTS_SH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "BTTS in the second half", gameList: homeOBJHome_list.BTTS_SH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.btts3 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "BTTS and over 2.5 goals", gameList: homeOBJHome_list.btts3, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.win_BTTS / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team won and BTTS", gameList: homeOBJHome_list.win_BTTS, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw_BTTS / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw and BTTS", gameList: homeOBJHome_list.draw_BTTS, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.lose_BTTS / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team lost and BTTS", gameList: homeOBJHome_list.lose_BTTS, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentHT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.leadHT / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team won first half", gameList: homeOBJHome_list.leadHT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.loseHT / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team lost first half", gameList: homeOBJHome_list.loseHT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.drawHT / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw at half-time", gameList: homeOBJHome_list.drawHT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.sinFH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team Scored over 0.5 in FH", gameList: homeOBJHome_list.sinFH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.sinSH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team Scored over 0.5 in SH", gameList: homeOBJHome_list.sinSH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.sibh / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Team Scored in both halves", gameList: homeOBJHome_list.sibh, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.gibh / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Goal in both halves", gameList: homeOBJHome_list.gibh, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.more_FH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "More goals in the first half", gameList: homeOBJHome_list.more_FH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.more_SH / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "More goals in the second half", gameList: homeOBJHome_list.more_SH, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentOU = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_1_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Over 1.5 goals", gameList: homeOBJHome_list.over_1_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_2_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Over 2.5 goals", gameList: homeOBJHome_list.over_2_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_3_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Over 3.5 goals", gameList: homeOBJHome_list.over_3_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_4_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Over 4.5 goals", gameList: homeOBJHome_list.over_4_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_5_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Over 5.5 goals", gameList: homeOBJHome_list.over_5_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.under_1_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Under 1.5 goals", gameList: homeOBJHome_list.under_1_5, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.under_2_5 / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Under 2.5 goals", gameList: homeOBJHome_list.under_2_5, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentOUHTFT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_0_5_HT / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 0.5 goals first half", gameList: homeOBJHome_list.over_0_5_HT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_1_5_HT / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 1.5 goals first half", gameList: homeOBJHome_list.over_1_5_HT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_2_5_HT / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 2.5 goals first half", gameList: homeOBJHome_list.over_2_5_HT, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_0_5_SH / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 0.5 goals second half", gameList: homeOBJHome_list.over_0_5_SH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_1_5_SH / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 1.5 goals second half", gameList: homeOBJHome_list.over_1_5_SH, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.over_2_5_SH / homeOBJHome.gamesCount) *
                        100).toFixed(0), txt: "Over 2.5 goals second half", gameList: homeOBJHome_list.over_2_5_SH, setList: true, teamName: props.teamName, homeAll: "H" })] }));
        contentHTFT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.home_home / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win HT - Win FT", gameList: homeOBJHome_list.home_home, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.home_draw / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win HT - Draw FT", gameList: homeOBJHome_list.home_draw, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.home_away / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Win HT - Lose FT", gameList: homeOBJHome_list.home_away, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw_home / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw HT - Win FT", gameList: homeOBJHome_list.draw_home, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw_draw / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw HT - Draw FT", gameList: homeOBJHome_list.draw_draw, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.draw_away / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Draw HT - Lose FT", gameList: homeOBJHome_list.draw_away, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.away_home / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose HT - Win FT", gameList: homeOBJHome_list.away_home, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.away_draw / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose HT - Draw FT", gameList: homeOBJHome_list.away_draw, setList: true, teamName: props.teamName, homeAll: "H" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJHome.away_away / homeOBJHome.gamesCount) * 100).toFixed(0), txt: "Lose HT - Lose FT", gameList: homeOBJHome_list.away_away, setList: true, teamName: props.teamName, homeAll: "H" })] }));
    }
    else if (state.all) {
        gamesCountVar = homeOBJAll.gamesCount;
        contentOverall = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: (homeOBJAll.gspm / homeOBJAll.gamesCount).toFixed(2), txt: "Goals scored per game", gameList: [], setList: false, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: (homeOBJAll.gcpm / homeOBJAll.gamesCount).toFixed(2), txt: "Goals conceded per game", gameList: [], setList: false, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.win / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win", gameList: homeOBJAll_list.win, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw", gameList: homeOBJAll_list.draw, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.lose / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose", gameList: homeOBJAll_list.lose, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.cleanS / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Clean sheets", gameList: homeOBJAll_list.cleanS, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.soem / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team scored over 0.5 goals", gameList: homeOBJAll_list.soem, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.stgoem / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team scored over 1.5 goals", gameList: homeOBJAll_list.stgoem, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentWinOver = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.win2 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win and over 1.5 goals", gameList: homeOBJAll_list.win2, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw2 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw and over 1.5 goals", gameList: homeOBJAll_list.draw2, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.lose2 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose and over 1.5 goals", gameList: homeOBJAll_list.lose2, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.win3 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win and over 2.5 goals", gameList: homeOBJAll_list.win3, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw3 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw and over 2.5 goals", gameList: homeOBJAll_list.draw3, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.lose3 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose and over 2.5 goals", gameList: homeOBJAll_list.lose3, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentBTTS = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.bts / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Both teams to score (BTTS)", gameList: homeOBJAll_list.bts, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.btsFH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "BTTS in the first half", gameList: homeOBJAll_list.btsFH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.BTTS_SH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "BTTS in the second half", gameList: homeOBJAll_list.BTTS_SH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.btts3 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "BTTS and over 2.5 goals", gameList: homeOBJAll_list.btts3, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.win_BTTS / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team won and BTTS", gameList: homeOBJAll_list.win_BTTS, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw_BTTS / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw and BTTS", gameList: homeOBJAll_list.draw_BTTS, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.lose_BTTS / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team lost and BTTS", gameList: homeOBJAll_list.lose_BTTS, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentHT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.leadHT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team won first half", gameList: homeOBJAll_list.leadHT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.loseHT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team lost first half", gameList: homeOBJAll_list.loseHT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.drawHT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw at half-time", gameList: homeOBJAll_list.drawHT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.sinFH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team Scored over 0.5 in FH", gameList: homeOBJAll_list.sinFH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.sinSH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team Scored over 0.5 in SH", gameList: homeOBJAll_list.sinSH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.sibh / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Team Scored in both halves", gameList: homeOBJAll_list.sibh, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.gibh / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Goal in both halves", gameList: homeOBJAll_list.gibh, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.more_FH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "More goals in the first half", gameList: homeOBJAll_list.more_FH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.more_SH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "More goals in the second half", gameList: homeOBJAll_list.more_SH, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentOU = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_1_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 1.5 goals", gameList: homeOBJAll_list.over_1_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_2_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 2.5 goals", gameList: homeOBJAll_list.over_2_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_3_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 3.5 goals", gameList: homeOBJAll_list.over_3_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_4_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 4.5 goals", gameList: homeOBJAll_list.over_4_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_5_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 5.5 goals", gameList: homeOBJAll_list.over_5_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.under_1_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Under 1.5 goals", gameList: homeOBJAll_list.under_1_5, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.under_2_5 / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Under 2.5 goals", gameList: homeOBJAll_list.under_2_5, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentOUHTFT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_0_5_HT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 0.5 goals first half", gameList: homeOBJAll_list.over_0_5_HT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_1_5_HT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 1.5 goals first half", gameList: homeOBJAll_list.over_1_5_HT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_2_5_HT / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 2.5 goals first half", gameList: homeOBJAll_list.over_2_5_HT, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_0_5_SH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 0.5 goals second half", gameList: homeOBJAll_list.over_0_5_SH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_1_5_SH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 1.5 goals second half", gameList: homeOBJAll_list.over_1_5_SH, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.over_2_5_SH / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Over 2.5 goals second half", gameList: homeOBJAll_list.over_2_5_SH, setList: true, teamName: props.teamName, homeAll: "A" })] }));
        contentHTFT = ((0, jsx_runtime_1.jsxs)("ul", { children: [(0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.home_home / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win HT - Win FT", gameList: homeOBJAll_list.home_home, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.home_draw / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win HT - Draw FT", gameList: homeOBJAll_list.home_draw, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.home_away / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Win HT - Lose FT", gameList: homeOBJAll_list.home_away, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw_home / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw HT - Win FT", gameList: homeOBJAll_list.draw_home, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw_draw / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw HT - Draw FT", gameList: homeOBJAll_list.draw_draw, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.draw_away / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Draw HT - Lose FT", gameList: homeOBJAll_list.draw_away, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.away_home / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose HT - Win FT", gameList: homeOBJAll_list.away_home, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.away_draw / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose HT - Draw FT", gameList: homeOBJAll_list.away_draw, setList: true, teamName: props.teamName, homeAll: "A" }), (0, jsx_runtime_1.jsx)(StatsLine_1.default, { br: ((homeOBJAll.away_away / homeOBJAll.gamesCount) * 100).toFixed(0), txt: "Lose HT - Lose FT", gameList: homeOBJAll_list.away_away, setList: true, teamName: props.teamName, homeAll: "A" })] }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStatsContainer }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Statistics" }), (0, jsx_runtime_1.jsxs)("div", Object.assign({ id: "homeButtons", className: SingleStats_module_css_1.default.overallButtons }, { children: [(0, jsx_runtime_1.jsx)(OverallButton_1.default, { o: state.single, click: setSingle, name: "Home" }), (0, jsx_runtime_1.jsx)(OverallButton_1.default, { o: state.all, click: setAll, name: "All" })] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.gamesCount }, { children: ["Number of games:", " ", (0, jsx_runtime_1.jsxs)("span", Object.assign({ style: { fontSize: "17px", fontWeight: "600" } }, { children: [gamesCountVar, " "] })), " "] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Overall" }), contentOverall] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Win/Draw/Lose & Over Goals" }), contentWinOver] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Over/Under" }), contentOU] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Over/Under FH-SH" }), contentOUHTFT] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "First Half (FH) / Second Half (SH)" }), contentHT] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Half-Time/Full-Time" }), contentHTFT] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: SingleStats_module_css_1.default.SingleStats }, { children: [(0, jsx_runtime_1.jsx)(TittleTemplateBox_1.default, { name: "Both Teams To Score" }), contentBTTS] }))] })));
};
exports.default = SingleStats;
